// Generated by AI (GitHub Copilot)
// Author: Nisarg Raval
package com.demo.app.service;

import com.demo.app.model.AccountAlias;
import com.demo.app.repository.AccountAliasRepository;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import java.util.Optional;
import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

public class AccountAliasServiceTest {
    @Mock
    private AccountAliasRepository aliasRepository;
    @InjectMocks
    private AccountAliasService aliasService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testCreateAndFindAlias() {
        AccountAlias alias = new AccountAlias();
        alias.setAlias("uniquealias");
        alias.setStatus("active");
        when(aliasRepository.save(any(AccountAlias.class))).thenReturn(alias);
        when(aliasRepository.findByAlias("uniquealias")).thenReturn(Optional.of(alias));
        AccountAlias saved = aliasService.createAlias(alias);
        assertNotNull(saved);
        Optional<AccountAlias> found = aliasService.findByAlias("uniquealias");
        assertTrue(found.isPresent());
        assertEquals("uniquealias", found.get().getAlias());
    }

    @Test
    void testDeleteAlias() {
        doNothing().when(aliasRepository).deleteById(1L);
        aliasService.deleteById(1L);
        verify(aliasRepository, times(1)).deleteById(1L);
    }
}
