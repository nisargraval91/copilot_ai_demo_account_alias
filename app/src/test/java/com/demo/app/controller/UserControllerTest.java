// Generated by AI (GitHub Copilot)
// Author: Nisarg Raval
package com.demo.app.controller;

import com.demo.app.model.User;
import com.demo.app.repository.UserRepository;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.MediaType;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@SpringBootTest
@AutoConfigureMockMvc
public class UserControllerTest {
    @Autowired
    private MockMvc mockMvc;
    @Autowired
    private UserRepository userRepository;

    @Test
    void testRegisterAndLogin() throws Exception {
        userRepository.deleteAll();
        String email = "testuser@email.com";
        String password = "testpass";
        String name = "Test User";
        String registerJson = String.format("{\"email\":\"%s\",\"password\":\"%s\",\"name\":\"%s\"}", email, password, name);
        String loginJson = String.format("{\"email\":\"%s\",\"password\":\"%s\"}", email, password);
        String wrongLoginJson = String.format("{\"email\":\"%s\",\"password\":\"wrongpass\"}", email);
        // Register
        mockMvc.perform(post("/api/users/register")
                .contentType(MediaType.APPLICATION_JSON)
                .content(registerJson))
                .andExpect(status().isOk());
        // Register again (should fail)
        mockMvc.perform(post("/api/users/register")
                .contentType(MediaType.APPLICATION_JSON)
                .content(registerJson))
                .andExpect(status().isBadRequest());
        // Login
        mockMvc.perform(post("/api/users/login")
                .contentType(MediaType.APPLICATION_JSON)
                .content(loginJson))
                .andExpect(status().isOk());
        // Login with wrong password
        mockMvc.perform(post("/api/users/login")
                .contentType(MediaType.APPLICATION_JSON)
                .content(wrongLoginJson))
                .andExpect(status().isBadRequest());
    }
}
